From 5b44040f5054cabde6c71d3a53eda94f6c4f4a75 Mon Sep 17 00:00:00 2001
From: laniakea64 <laniakea64@users.noreply.github.com>
Date: Thu, 17 Oct 2019 14:22:47 -0400
Subject: [PATCH] Disable some telemetry settings

---
 modules/libpref/Preferences.cpp               | 43 +++----------------
 .../telemetry/app/TelemetryUtils.jsm          | 20 +--------
 2 files changed, 7 insertions(+), 56 deletions(-)

diff --git a/modules/libpref/Preferences.cpp b/modules/libpref/Preferences.cpp
index e239bd7e50f0..a7c537abab20 100644
--- a/modules/libpref/Preferences.cpp
+++ b/modules/libpref/Preferences.cpp
@@ -3334,18 +3334,10 @@ static Maybe<bool> TelemetryPrefValue() {
     return Nothing();
   }
 
-  // Determine the correct default for toolkit.telemetry.enabled. If this
-  // build has MOZ_TELEMETRY_ON_BY_DEFAULT *or* we're on the beta channel,
-  // telemetry is on by default, otherwise not. This is necessary so that
-  // beta users who are testing final release builds don't flipflop defaults.
-#  ifdef MOZ_TELEMETRY_ON_BY_DEFAULT
-  return Some(true);
-#  else
-  nsAutoCString channelPrefValue;
-  Unused << Preferences::GetCString(kChannelPref, channelPrefValue,
-                                    PrefValueKind::Default);
-  return Some(channelPrefValue.EqualsLiteral("beta"));
-#  endif
+  // Determine the correct default for toolkit.telemetry.enabled
+
+  // Waterfox doesn't do telemetry
+  return Some(false);
 }
 
 /* static */
@@ -3366,32 +3358,7 @@ static bool TelemetryPrefValue() {
   // toolkit.telemetry.enabled determines whether we send "extended" data.
   // We only want extended data from pre-release channels due to size.
 
-  NS_NAMED_LITERAL_CSTRING(channel, MOZ_STRINGIFY(MOZ_UPDATE_CHANNEL));
-
-  // Easy cases: Nightly, Aurora, Beta.
-  if (channel.EqualsLiteral("nightly") || channel.EqualsLiteral("aurora") ||
-      channel.EqualsLiteral("beta")) {
-    return true;
-  }
-
-#  ifndef MOZILLA_OFFICIAL
-  // Local developer builds: non-official builds on the "default" channel.
-  if (channel.EqualsLiteral("default")) {
-    return true;
-  }
-#  endif
-
-  // Release Candidate builds: builds that think they are release builds, but
-  // are shipped to beta users.
-  if (channel.EqualsLiteral("release")) {
-    nsAutoCString channelPrefValue;
-    Unused << Preferences::GetCString(kChannelPref, channelPrefValue,
-                                      PrefValueKind::Default);
-    if (channelPrefValue.EqualsLiteral("beta")) {
-      return true;
-    }
-  }
-
+  // Waterfox doesn't do telemetry
   return false;
 }
 
diff --git a/toolkit/components/telemetry/app/TelemetryUtils.jsm b/toolkit/components/telemetry/app/TelemetryUtils.jsm
index 8a18970496ca..0f04b688f0bf 100644
--- a/toolkit/components/telemetry/app/TelemetryUtils.jsm
+++ b/toolkit/components/telemetry/app/TelemetryUtils.jsm
@@ -266,24 +266,8 @@ var TelemetryUtils = {
    * Set the Telemetry core recording flag for Unified Telemetry.
    */
   setTelemetryRecordingFlags() {
-    // Enable extended Telemetry on pre-release channels and disable it
-    // on Release/ESR.
-    let prereleaseChannels = ["nightly", "aurora", "beta"];
-    if (!AppConstants.MOZILLA_OFFICIAL) {
-      // Turn extended telemetry for local developer builds.
-      prereleaseChannels.push("default");
-    }
-    const isPrereleaseChannel = prereleaseChannels.includes(
-      AppConstants.MOZ_UPDATE_CHANNEL
-    );
-    const isReleaseCandidateOnBeta =
-      AppConstants.MOZ_UPDATE_CHANNEL === "release" &&
-      Services.prefs.getCharPref("app.update.channel", null) === "beta";
-    Services.telemetry.canRecordBase = true;
-    Services.telemetry.canRecordExtended =
-      isPrereleaseChannel ||
-      isReleaseCandidateOnBeta ||
-      Services.prefs.getBoolPref(this.Preferences.OverridePreRelease, false);
+    Services.telemetry.canRecordBase = false;
+    Services.telemetry.canRecordExtended = false;
   },
 
   /**
